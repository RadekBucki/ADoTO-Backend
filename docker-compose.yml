version: '3.3'
services:
  db:
    image: postgis/postgis:14-3.3
    restart: unless-stopped
    env_file: .env
    ports:
      - '${POSTGRES_LOCAL_PORT}:${POSTGRES_DOCKER_PORT}'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      timeout: 20s
      retries: 10
    volumes:
      - ./src/main/resources/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./src/main/resources/testData.sql:/docker-entrypoint-initdb.d/testData.sql
      - ./src/main/resources/1.sql:/docker-entrypoint-initdb.d/1.sql
      - ./src/main/resources/2.sql:/docker-entrypoint-initdb.d/2.sql
      - ./src/main/resources/3.sql:/docker-entrypoint-initdb.d/3.sql
      - ./src/main/resources/4.sql:/docker-entrypoint-initdb.d/4.sql
      - ./src/main/resources/5.sql:/docker-entrypoint-initdb.d/5.sql
      - ./src/main/resources/6.sql:/docker-entrypoint-initdb.d/6.sql
      - ./src/main/resources/7.sql:/docker-entrypoint-initdb.d/7.sql
  app:
    depends_on:
      db:
        condition: service_healthy
    build: .
    env_file: .env
    restart: unless-stopped
    ports:
      - '${SPRING_LOCAL_PORT}:${SPRING_DOCKER_PORT}'
    volumes:
      - .m2:/root/.m2
volumes:
  db: